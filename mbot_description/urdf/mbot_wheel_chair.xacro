<?xml version="1.0" ?>
<robot name="wheelchair" xmlns:xacro="http://ros.org/wiki/xacro">
    <material name="veryDarkGrey">
        <color rgba="0.2 0.2 0.2 1.0"/>
    </material>
    <material name="light_grey">
        <color rgba="0.6 0.6 0.6 1.0"/>
    </material>
    <material name="black">
        <color rgba="0.0 0.0 0.0 1.0"/>
    </material>
    <material name="blue">
        <color rgba="0.0 0.0 0.8 1.0"/>
    </material>
    
    <xacro:property name="M_PI" value="3.1415926"/>
    <xacro:property name="base_mass"   value="20" /> 
    <xacro:property name="base_height" value="0.08"/>
    <xacro:property name="base_width" value="0.5"/>
    <xacro:property name="base_depth" value="0.5"/>

	<xacro:property name="back_mass"   value="5" /> 
    <xacro:property name="back_height" value="0.6"/>
    <xacro:property name="back_width" value="0.05"/>
    <xacro:property name="back_depth" value="0.49"/>

	<xacro:property name="axis_mass"   value="5" /> 
    <xacro:property name="axis_length" value="0.5"/>
    <xacro:property name="axis_radius" value="0.02"/>

    <xacro:property name="wheel_mass"   value="2" />
    <xacro:property name="wheel_radius" value="0.2"/>
    <xacro:property name="wheel_length" value="0.07"/>
    <xacro:property name="wheel_joint_x" value="0.80"/>
    <xacro:property name="wheel_joint_z" value="0.00"/>

    <xacro:property name="caster_mass"    value="0.5" /> 
    <xacro:property name="caster_radius"  value="0.2"/> <!-- wheel_radius - ( base_length/2 - wheel_joint_z) -->
    <xacro:property name="caster_joint_x" value="0.18"/>

    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>

    <xacro:macro name="box_intertia" params="height length width weight" >
        <inertia ixx="${1/12 * weight * (height + length)}" 
                 ixy="0" ixz="0" iyy="${1/12 * weight * (width + length)}" 
                 iyz="0" izz="${1/12 * weight * (width + height)}" />
    </xacro:macro>


	<xacro:macro name="caster" params="prefix reflect">
        <joint name="${prefix}_caster_joint" type="continuous">
            <origin xyz="${reflect*caster_joint_x} 0 0" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_caster_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${prefix}_caster_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
            </collision>      
            <sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" />
        </link>

        <gazebo reference="${prefix}_caster_link">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>


	<xacro:macro name="wheel" params="prefix reflect">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <origin xyz="0 ${reflect*wheel_joint_x} ${-wheel_joint_z}" rpy="0 0 0"/>
            <parent link="wheel_base"/>
            <child link="${prefix}_wheel_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
                <material name="gray" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
            </collision>
            <cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
        </link>

        <transmission name="${prefix}_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}_wheel_joint" >
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="${prefix}_wheel_joint_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    </xacro:macro>

	<xacro:macro name="mbot_base_gazebo">
    <link name="base_footprint">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>
    <gazebo reference="base_footprint">
        <turnGravityOff>true</turnGravityOff>
    </gazebo>

    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 ${base_height/2 + caster_radius*2}" rpy="0 0 0" />        
        <parent link="base_footprint"/>
        <child link="base_link" />
        </joint>

    <link name="base_link">
        <visual>
            <origin rpy="0 0 0" xyz="-0.1 0 -0.02"/>
            <geometry>
                <box size="${base_width} ${base_depth} ${base_height}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="-0.1 0 -0.02"/>
            <geometry>
                <box size="${base_width} ${base_depth} ${base_height}"/>
            </geometry>
        </collision>
		<box_inertia  height="${base_height}" length="${base_depth}" width="${base_width}" weight="${base_mass}" />
    </link>

	<link name="back_link">
        <visual>
            <origin rpy="0 0 0" xyz="-0.17 0 0.18"/>
            <geometry>
                <box size="${back_width} ${back_depth} ${back_height}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="-0.17 0 0.18"/>
            <geometry>
                <box size="${back_width} ${back_depth} ${back_height}"/>
            </geometry>
        </collision>
		<box_inertia  height="${back_height}" length="${back_depth}" width="${back_width}" weight="${back_mass}" />
    </link>
	<joint name="base_back" type="fixed">
        <origin rpy="0 0 0" xyz="-0.17 0 0.18"/>
        <parent link="base_link"/>
        <child link="back_link"/>
    </joint>

    <link name="wheel_base">
        <visual>
            <origin rpy="1.5707 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${axis_length}" radius="${axis_radius}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin rpy="1.5707 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder length="${axis_length}" radius="${axis_radius}"/>
            </geometry>
        </collision>
		<cylinder_inertial_matrix  m="${axis_mass}" r="${axis_radius}" h="${axis_length}" />
    </link>
	<joint name="base_wheelbase" type="fixed">
        <origin rpy="0 0 0" xyz="-0.14 0 -0.09"/>
        <parent link="base_link"/>
        <child link="wheel_base"/>
    </joint>
    <wheel prefix="left"  reflect="-1"/>
    <wheel prefix="right" reflect="1"/>

	<caster prefix="front" reflect="-1"/>
    <caster prefix="back"  reflect="1"/>

    
  
        <!-- controller -->
        <gazebo>
            <plugin name="differential_drive_controller" 
                    filename="libgazebo_ros_diff_drive.so">
                <rosDebugLevel>Debug</rosDebugLevel>
                <publishWheelTF>true</publishWheelTF>
                <robotNamespace>/</robotNamespace>
                <publishTf>1</publishTf>
                <publishWheelJointState>true</publishWheelJointState>
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <legacyMode>true</legacyMode>
                <leftJoint>left_wheel_joint</leftJoint>
                <rightJoint>right_wheel_joint</rightJoint>
                <wheelSeparation>${wheel_joint_x*2}</wheelSeparation>
                <wheelDiameter>${2*wheel_radius}</wheelDiameter>
                <broadcastTF>1</broadcastTF>
                <wheelTorque>10</wheelTorque>
                <wheelAcceleration>1.8</wheelAcceleration>
                <commandTopic>cmd_vel</commandTopic>
                <odometryFrame>odom</odometryFrame> 
                <odometryTopic>odom</odometryTopic> 
                <robotBaseFrame>base_footprint</robotBaseFrame>
            </plugin>
        </gazebo> 
	</xacro:macro>


</robot>

